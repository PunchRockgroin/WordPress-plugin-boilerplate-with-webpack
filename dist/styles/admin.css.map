{"version":3,"sources":["webpack:///./styles/mixins/_functions.scss?e290","webpack:///./styles/admin.scss","webpack:///./styles/mixins/_mixins.scss?607d","webpack:///./styles/mixins/_placeholders.scss?0935"],"names":[],"mappings":"AAAA;;GCEG;;ADKH;;GCDG;;ADcH;;GCVG;;ADiBH;;GCbG;;AD0BH;;GCtBG;;AClBH;;GDsBG;;ACoBH;;GDhBG;;AE1BH;;GF8BG","file":"styles/admin.css","sourcesContent":["/**\n * Pixel to REM\n */\n@function rem( $pixels, $context: $base-font-size ) {\n\t@return #{$pixels/$context}rem;\n}\n\n/**\n * Converts Photoshop line heights to CSS REM\n */\n@function leading($font-size, $leading) {\n\t$lh: (($leading / 2) + $font-size);\n\n\t@if ($lh < 100) {\n\t\t$lh: $lh + 100;\n\t}\n\n\t@return (($leading / $font-size) * 100) * 1%;\n}\n\n/**\n * Converts Photoshop letter spacing to CSS REM\n */\n@function spacing($spacing) {\n\t@return ($spacing / 1000) * 1rem;\n}\n\n/**\n * Breakpoints\n */\n@function break($key) {\n\t@if map-has-key($breakpoints, $key) {\n\t\t@return map-get($breakpoints, $key);\n\t}\n\n\t@warn \"Unknown #{$key} in $breakpoints.\";\n\n\t@return null;\n}\n\n/**\n * Get color from map\n */\n@function color($key) {\n\t@if map-has-key($colors, $key) {\n\t\t@return map-get($colors, $key);\n\t}\n\n\t@warn \"Unknown #{$key} in $colors.\";\n\n\t@return null;\n}\n\n\n@function map-deep-get($map, $keys...) {\n\t@each $key in $keys {\n\t\t$map: map-get($map, $key);\n\t}\n\t@return $map;\n}\n\n\n// WEBPACK FOOTER //\n// ./styles/mixins/_functions.scss","/**\n * Pixel to REM\n */\n\n/**\n * Converts Photoshop line heights to CSS REM\n */\n\n/**\n * Converts Photoshop letter spacing to CSS REM\n */\n\n/**\n * Breakpoints\n */\n\n/**\n * Get color from map\n */\n\n/**\n * Font shortend\n */\n\n/**\n * Links styling\n */\n\n/**\n * Screen reader text\n */\n\n\n\n\n// WEBPACK FOOTER //\n// ./styles/admin.scss","/**\n * Font shortend\n */\n@mixin font($size, $line-height:$base-font-size, $letter-spacing:0) {\n    @if ($size) {\n        font-size: rem($size);\n    }\n\n    @if ($line-height == 1) {\n        line-height: 1;\n    }\n\n    @elseif ($line-height != $base-font-size) {\n        line-height: leading($size, $line-height);\n    }\n\n    @if ($letter-spacing != 0) {\n        letter-spacing: spacing($letter-spacing);\n    }\n\n}\n\n@mixin placeholder {\n    &::-webkit-input-placeholder {\n        @content;\n    }\n\n    &:-moz-placeholder {\n        @content;\n    }\n\n    &::-moz-placeholder {\n        @content;\n    }\n\n    &:-ms-input-placeholder {\n        @content;\n    }\n\n}\n\n\n/**\n * Links styling\n */\n@mixin link-colors($normal, $hover:'none') {\n    @if ($hover == 'none') {\n        $hover: $normal;\n    }\n\n    &:link,\n    &:focus,\n    &:active,\n    &:visited {\n        color: $normal;\n    }\n\n    &:hover {\n        color: $hover;\n    }\n}\n\n@mixin ns {\n    &:link,\n    &:visited {\n        @content;\n    }\n\n}\n\n@mixin hs {\n    &:hover,\n    &:focus,\n    &:active {\n        @content;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./styles/mixins/_mixins.scss","/**\n * Screen reader text\n */\n%sr-only {\n    top: auto;\n    left: -10000rem;\n    clip: rect(1px 1px 1px 1px);\n    clip: rect(1px, 1px, 1px, 1px);\n    width: 1px;\n    height: 1px;\n    position: absolute;\n    overflow: hidden;\n}\n\n\n// WEBPACK FOOTER //\n// ./styles/mixins/_placeholders.scss"],"sourceRoot":""}